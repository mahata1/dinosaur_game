#include <stdio.h>
#include <conio.h>
#include <windows.h>

void clear_screen() {
    system("cls");
}
//  gotoxy function to move cursor to specific point
void gotoxy(int x, int y) {
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}
//print_obstacle function displays obstacle
void print_obstacle(int n_obstacle){
	printf("obstacle%d",n_obstacle);
}
// print_ground displays ground and call print_obstacle function:
void print_ground() {
     static int state=0;
      int dash_number = 20;
      static int p_obstacle = 10;
      int i =0;static int n_obstacle= 1;
      int size_of_obstacle = 8;
    if (state % 2 == 0) {
        while (dash_number--){ 
        i++;
        if(i==p_obstacle){
          print_obstacle(n_obstacle);
         // printf("obstacle%d",n_obstacle);	
		}
		else{
		printf("__  _  ");}//6 
	}
        
    } else {
        while (dash_number--){
         i++;
         if (i== p_obstacle){
         	print_obstacle(n_obstacle);
         //	printf("obstacle%d",n_obstacle);
		 }
		 printf("_   __  ")
		 ;}//
    }
    //Sleep(100);
    if (p_obstacle == 0){
    	p_obstacle = 15;
    	n_obstacle++;
	}
	p_obstacle -= 1;
    state++;
}
void print_dinosaur() {
    printf("\n");
    printf("                   __      \n");
    printf("                  / ._)     \n");
    printf("          _.-----'  /      \n");
    printf("         /         )  \n");
    printf("      __/ (\\      /     \n");
    printf("     /__.-' |_|-|_| \n");
}

void dino_ground(int ground_position) {
    int i = ground_position;
    	gotoxy(0,13);
        print_ground();
       gotoxy(0,0);
    for (i = 1; i <= ground_position; i++) {
        printf("\n");
    }
    print_dinosaur();
    Sleep(100);
}

void dino_jump(int dinosaur_ground_position, int dinosaur_upper_position) {
    // code to move dinosaur upward
    int k, kk;
    for (k = dinosaur_ground_position; k >= dinosaur_upper_position; k--) {
        kk = k;
        gotoxy(0,13);
        print_ground();
        gotoxy(0,0);
        while (kk > 1) {
            printf("\n");
            kk--;
        }
        print_dinosaur();
        Sleep(10);
        clear_screen();
    }  
    // move dino downward
    for (k = dinosaur_upper_position; k <= dinosaur_ground_position; k++) {
        kk = k;
        gotoxy(0,13);
        print_ground();
        gotoxy(0,0);
        while (kk > 0) {
            printf("\n");
            kk--;
        }
        print_dinosaur();
        Sleep(10);
        clear_screen();
    }
}

int main() {
    int dinosaur_ground_position = 7;
    int dinosaur_upper_position = 4;
    int jump_flag = 0; // Variable to track if the jump has been initiated
    int j;
    char ch;

    while (1) {
        if (_kbhit()) {
            ch = _getch();
            if (ch == 'j' && !jump_flag) { // Check if 'j' is pressed and a jump is not already in progress
                jump_flag = 1; // Set the jump flag to indicate a jump is in progress
                dino_jump(dinosaur_ground_position, dinosaur_upper_position); // Start the jump
                jump_flag = 0; // Reset the jump flag since the jump is completed
            }
            // Clear the input buffer to avoid multiple key presses
            while (_kbhit()) {
                ch = _getch();
            }
        }

        dino_ground(dinosaur_ground_position); // Display in ground position
        clear_screen();
    }

    return 0;
}
